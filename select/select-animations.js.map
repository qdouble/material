{"version":3,"sources":["select/select-animations.ts"],"names":[],"mappings":"OAAO,EACL,OAAO,EAEP,KAAK,EACL,KAAK,EACL,UAAU,EACV,OAAO,EACR,MAAM,eAAe;AAEtB;;;;;GAKG;AAEH;;;;GAIG;AACH,OAAO,IAAM,oBAAoB,GAA2B,OAAO,CAAC,sBAAsB,EAAE;IAC1F,KAAK,CAAC,QAAQ,EAAE,KAAK,CAAC;QACpB,SAAS,EAAE,+BAA+B;KAC3C,CAAC,CAAC;IACH,KAAK,CAAC,cAAc,EAAE,KAAK,CAAC;QAC1B,SAAS,EAAE,yCAAyC;KACrD,CAAC,CAAC;IACH,KAAK,CAAC,cAAc,EAAE,KAAK,CAAC;QAC1B,SAAS,EAAE,wCAAwC;KACpD,CAAC,CAAC;IACH,UAAU,CAAC,QAAQ,EAAE,OAAO,CAAC,wCAAwC,CAAC,CAAC;CACxE,CAAC,CAAC;AAEH;;;;;;;;GAQG;AACH,OAAO,IAAM,cAAc,GAA2B,OAAO,CAAC,gBAAgB,EAAE;IAC9E,KAAK,CAAC,SAAS,EAAE,KAAK,CAAC;QACrB,OAAO,EAAE,CAAC;QACV,KAAK,EAAE,mBAAmB;QAC1B,SAAS,EAAE,uCAAuC;KACnD,CAAC,CAAC;IACH,KAAK,CAAC,SAAS,EAAE,KAAK,CAAC;QACrB,OAAO,EAAE,CAAC;QACV,KAAK,EAAE,mBAAmB;QAC1B,SAAS,EAAE,sCAAsC;KAClD,CAAC,CAAC;IACH,KAAK,CAAC,YAAY,EAAE,KAAK,CAAC;QACxB,OAAO,EAAE,CAAC;QACV,KAAK,EAAE,mBAAmB;QAC1B,SAAS,EAAE,sCAAsC;KAClD,CAAC,CAAC;IACH,KAAK,CAAC,YAAY,EAAE,KAAK,CAAC;QACxB,OAAO,EAAE,CAAC;QACV,KAAK,EAAE,mBAAmB;QAC1B,SAAS,EAAE,qCAAqC;KACjD,CAAC,CAAC;IACH,UAAU,CAAC,WAAW,EAAE;QACtB,KAAK,CAAC;YACJ,OAAO,EAAE,CAAC;YACV,KAAK,EAAE,MAAM;YACb,SAAS,EAAE,gCAAgC;SAC5C,CAAC;QACF,OAAO,CAAC,wCAAwC,CAAC;KAClD,CAAC;IACF,UAAU,CAAC,WAAW,EAAE;QACtB,OAAO,CAAC,oBAAoB,EAAE,KAAK,CAAC,EAAC,OAAO,EAAE,CAAC,EAAC,CAAC,CAAC;KACnD,CAAC;CACH,CAAC,CAAC;AAEH;;;;GAIG;AACH,OAAO,IAAM,aAAa,GAA6B,OAAO,CAAC,eAAe,EAAE;IAC9E,KAAK,CAAC,SAAS,EAAE,KAAK,CAAC,EAAC,OAAO,EAAE,CAAC,EAAC,CAAC,CAAC;IACrC,UAAU,CAAC,iBAAiB,EAAE;QAC5B,KAAK,CAAC,EAAC,OAAO,EAAE,CAAC,EAAC,CAAC;QACnB,OAAO,CAAC,8CAA8C,CAAC;KACxD,CAAC;CACH,CAAC,CAAC","file":"select-animations.js","sourcesContent":["import {\n  animate,\n  AnimationEntryMetadata,\n  state,\n  style,\n  transition,\n  trigger,\n} from '@angular/core';\n\n/**\n * The following are all the animations for the md-select component, with each\n * const containing the metadata for one animation.\n *\n * The values below match the implementation of the Material 1 md-select animation.\n */\n\n/**\n * This animation shrinks the placeholder text to 75% of its normal size and translates\n * it to either the top left corner (ltr) or top right corner (rtl) of the trigger,\n * depending on the text direction of the application.\n */\nexport const transformPlaceholder: AnimationEntryMetadata = trigger('transformPlaceholder', [\n  state('normal', style({\n    transform: `translate3d(0, 0, 0) scale(1)`\n  })),\n  state('floating-ltr', style({\n    transform: `translate3d(-2px, -22px, 0) scale(0.75)`\n  })),\n  state('floating-rtl', style({\n    transform: `translate3d(2px, -22px, 0) scale(0.75)`\n  })),\n  transition('* => *', animate(`400ms cubic-bezier(0.25, 0.8, 0.25, 1)`))\n]);\n\n/**\n * This animation transforms the select's overlay panel on and off the page.\n *\n * When the panel is attached to the DOM, it expands its width 32px, scales it up to\n * 100% on the Y axis, fades in its border, and translates slightly up and to the\n * side to ensure the option text correctly overlaps the trigger text.\n *\n * When the panel is removed from the DOM, it simply fades out linearly.\n */\nexport const transformPanel: AnimationEntryMetadata = trigger('transformPanel', [\n  state('top-ltr', style({\n    opacity: 1,\n    width: 'calc(100% + 32px)',\n    transform: `translate3d(-16px, -9px, 0) scaleY(1)`\n  })),\n  state('top-rtl', style({\n    opacity: 1,\n    width: 'calc(100% + 32px)',\n    transform: `translate3d(16px, -9px, 0) scaleY(1)`\n  })),\n  state('bottom-ltr', style({\n    opacity: 1,\n    width: 'calc(100% + 32px)',\n    transform: `translate3d(-16px, 8px, 0) scaleY(1)`\n  })),\n  state('bottom-rtl', style({\n    opacity: 1,\n    width: 'calc(100% + 32px)',\n    transform: `translate3d(16px, 8px, 0) scaleY(1)`\n  })),\n  transition('void => *', [\n    style({\n      opacity: 0,\n      width: '100%',\n      transform: `translate3d(0, 0, 0) scaleY(0)`\n    }),\n    animate(`150ms cubic-bezier(0.25, 0.8, 0.25, 1)`)\n  ]),\n  transition('* => void', [\n    animate('250ms 100ms linear', style({opacity: 0}))\n  ])\n]);\n\n/**\n * This animation fades in the background color and text content of the\n * select's options. It is time delayed to occur 100ms after the overlay\n * panel has transformed in.\n */\nexport const fadeInContent: AnimationEntryMetadata  =  trigger('fadeInContent', [\n  state('showing', style({opacity: 1})),\n  transition('void => showing', [\n    style({opacity: 0}),\n    animate(`150ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)`)\n  ])\n]);\n"]}